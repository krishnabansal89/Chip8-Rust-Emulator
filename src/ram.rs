pub struct Ram {
   pub mem : [u8; 4096]
}

impl Ram {
    pub fn new() -> Ram
    {
        let mut ram = Ram{mem : [0; 4096]};
        let sprit :[[u8;5]; 16] = [ 
            [0xF0, 0x90, 0x90, 0x90, 0xF0], // 0
            [0x20, 0x60, 0x20, 0x20, 0x70], // 1
            [0xF0, 0x10, 0xF0, 0x80, 0xF0], // 2
            [0xF0, 0x10, 0xF0, 0x10, 0xF0], // 3
            [0x90, 0x90, 0xF0, 0x10, 0x10], // 4
            [0xF0, 0x80, 0xF0, 0x10, 0xF0], // 5
            [0xF0, 0x80, 0xF0, 0x90, 0xF0], // 6
            [0xF0, 0x10, 0x20, 0x40, 0x40], // 7
            [0xF0, 0x90, 0xF0, 0x90, 0xF0], // 8
            [0xF0, 0x90, 0xF0, 0x10, 0xF0], // 9
            [0xF0, 0x90, 0xF0, 0x90, 0x90], // A
            [0xE0, 0x90, 0xE0, 0x90, 0xE0], // B
            [0xF0, 0x80, 0x80, 0x80, 0xF0], // C
            [0xE0, 0x90, 0x90, 0x90, 0xE0], // D
            [0xF0, 0x80, 0xF0, 0x80, 0xF0], // E
            [0xF0, 0x80, 0xF0, 0x80, 0x80]  // F
        ];
        let mut i = 0;
        for sprite in sprit.iter()
        {
            for j in 0..5
            {
                ram.write_byte(i , sprite[j]);
                i += 1;
            }
        }
        for i in 0..0x1ff{
            // print!("{:#x} ",ram.read_byte(i));
        }
        ram
    }
    pub fn read_byte(&mut self , address : u16) -> u8
    {
        self.mem[address as usize]
    }
    pub fn write_byte(&mut self , address : u16 , data : u8)
    {
        self.mem[address as usize] = data;
    }
}